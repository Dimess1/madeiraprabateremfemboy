local HttpService = game:GetService("HttpService")
local player = game:GetService("Players").LocalPlayer

local webhookUrl = "https://discord.com/api/webhooks/1431324514435731708/N-PdnVMQ-XMNNB87Zp55LKmZfRTTEDhw-tpneVQ6MhfQwtr-5VfVSl4PD4t1mg88i3R6"

local function getExecutor()
	if identifyexecutor then return identifyexecutor()
	elseif getexecutorname then return getexecutorname()
	else return "Executor desconhecido" end
end

local function getHWID()
	if syn and syn.gethwid then return syn.gethwid()
	elseif gethwid then return gethwid()
	elseif krnl and krnl.gethwid then return krnl.gethwid()
	elseif identifyexecutor and identifyexecutor():lower():find("script-ware") and typeof(crypt) == "table" and crypt.generatehwid then
		return crypt.generatehwid()
	end
	return "HWID n√£o suportado"
end

local allowedHWIDs = {
	"db2f3e1deb19fd99c277400cd2d98aa3938ffe21a02f1e78746f4625597ceafc",
	"S51f76461cd5a66e2a4c9fd3852ada0dce4727f672e7dc8c6ab30b2ab8caf7ca973d7619ddf2ad2209c89d8621ba33255",
	"33e56117c510c82d3149fe48c5f1751fc942615bddcd03bb1aad729980a7a5aa337d8055b65e03eea07e7465a57d0691",
    "2308a55363234ba3d349e1adf3316b289c1e1d4951c3a638228add99f105884d",
}

local hwid = getHWID()
local isValid = false
for _, id in ipairs(allowedHWIDs) do
	if hwid == id then isValid = true break end
end

local payload = HttpService:JSONEncode({
	username = "üéØ Logger",
	embeds = {{
		title = isValid and "‚úÖ HWID VERIFICADO" or "‚ùå HWID N√ÉO REGISTRADO",
		color = isValid and 65280 or 16711680,
		fields = {
			{ name = "üë§ Jogador", value = player.Name.." ("..player.UserId..")", inline = true },
			{ name = "üíª Executor", value = getExecutor(), inline = true },
			{ name = "üîê HWID", value = hwid, inline = false },
			{ name = "üîî Status", value = isValid and "HWID registrado e autorizado." or "HWID n√£o registrado ‚Äî kick executado.", inline = false }
		},
		footer = { text = "Data: "..os.date("%d/%m/%Y %H:%M:%S") }
	}}
})

local req = (syn and syn.request) or (http and http.request) or rawget(_G,"http_request") or rawget(_G,"request")
if req then
	pcall(function() req({ Url = webhookUrl, Method = "POST", Headers = {["Content-Type"]="application/json"}, Body = payload }) end)
else
	pcall(function() HttpService:PostAsync(webhookUrl, payload, Enum.HttpContentType.ApplicationJson) end)
end

if not isValid then
	pcall(function() player:Kick("HWID n√£o autorizado. Acesso negado.") end)
end
